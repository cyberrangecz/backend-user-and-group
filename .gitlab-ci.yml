image: 'maven:3.6.3-jdk-11-slim'

variables:
  LANG: C.UTF-8
  LC_ALL: C.UTF-8
  PROJECT_GROUP_ID: cz/muni/ics/kypo
  PROJECT_ARTIFACT_ID: kypo2-rest-user-and-group
  DEPLOYMENT_INFO_VERSION_FILE: VERSION.txt
  
stages:
  - createTag
  - build
  - tests
  - deploy
  
createTag:
  stage: createTag
  before_script:
  # ssh config
  - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh -o 'StrictHostKeyChecking no' "$SSH_HOST_CHECKING_DOMAIN"
  # git config
  - apt-get install git -y
  - git config --global user.email "$GIT_USER_EMAIL"
  - git config --global user.name "$GIT_USER_NAME"
  - git remote set-url origin "$GIT_CLONE_URL"
  - git fetch
  - git checkout master
  script:
  - export VERSION=$(cut -d ' ' -f1 $DEPLOYMENT_INFO_VERSION_FILE)
  - export TAG_MESSAGE=$(cut -d ' ' -f2- $DEPLOYMENT_INFO_VERSION_FILE)
  # update project versions in multi-module maven project
  - mvn versions:set -DnewVersion=$VERSION -DgenerateBackupPoms=false
  - git commit -am "Update pom.xml version based on GitLab tag. Done by CI."
  - git push -o ci.skip
  # update change log
  - CURRENT_TAG=$(git tag | head -1)
  - PREVIOUS_TAG=$(git tag | head -2 | awk '{split($0, tags, "\n")} END {print tags[1]}')
  - git log  --pretty=format:' * %s' $CURRENT_TAG..$PREVIOUS_TAG > CHANGELOG.md
  # create new tag
  - git tag -a $VERSION -m $TAG_MESSAGE
  - git push origin $VERSION -o ci.skip
  rules:
  - if: '$CI_COMMIT_BRANCH == "master"'
    changes:
      - VERSION.txt
  artifacts:
    paths:
    - ./pom.xml
    - ./*/pom.xml
    expire_in: 1 hour
    when: on_success
    
build:
  stage: build
  script:
  - mvn clean install -DskipTests -Dproprietary-repo-url=$PROPRIETARY_REPO_URL
  rules:
  - if: '$CI_COMMIT_BRANCH'
  artifacts:
    paths:
    - $PROJECT_ARTIFACT_ID/target/$PROJECT_ARTIFACT_ID-*.jar
    expire_in: 1 hour
    when: on_success
    
tests:
  stage: tests
  script:
  - mvn test -Dproprietary-repo-url=$PROPRIETARY_REPO_URL
  rules:
   if: '$CI_COMMIT_BRANCH == "master"'
    changes:
      - VERSION.txt
      when: never
  - if: '$CI_COMMIT_BRANCH'
  
deploy:
  stage: deploy
  script:
  - export VERSION=$(cut -d ' ' -f1 $DEPLOYMENT_INFO_VERSION_FILE)  
  - >
    curl -X PUT -v -u
    ${CSIRT_MU_NEXUS_URL_JAVA_DEPLOY_USERNAME}:${CSIRT_MU_NEXUS_URL_JAVA_DEPLOY_PASSWORD}
    --upload-file $PROJECT_ARTIFACT_ID/target/$PROJECT_ARTIFACT_ID-$VERSION.jar
    ${CSIRT_MU_NEXUS_URL}/$PROJECT_GROUP_ID/$PROJECT_ARTIFACT_ID/$VERSION/$PROJECT_ARTIFACT_ID-$VERSION.jar
  rules:
  - if: '$CI_COMMIT_BRANCH == "master"'
    changes:
      - VERSION.txt